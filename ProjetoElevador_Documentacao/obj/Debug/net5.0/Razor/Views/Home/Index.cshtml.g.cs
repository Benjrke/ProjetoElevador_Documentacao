#pragma checksum "C:\Users\be\source\repos\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "68177cf6202832c76c1cca5f339c321ee6596af6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\be\source\repos\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\_ViewImports.cshtml"
using ProjetoElevador_Documentacao;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\be\source\repos\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\_ViewImports.cshtml"
using ProjetoElevador_Documentacao.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"68177cf6202832c76c1cca5f339c321ee6596af6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4923143fe3bec400c1f93c72fde12f2bac68e920", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\be\source\repos\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Projeto Final Curso MS-DEV - Benjamim Jr";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<a class=""text-center"">
    <h6 class=""display-4"">Projeto Final da Jornada Microsoft Dev</h6>
     <a> 
        
         <p ><h6 class =""text-center""> Elevador Simples:</h6></p>
         <p class = ""text-center""> Funções/Métodos:</p>
 <p><h6>-Inicializar -</h6> Recebe os parâmetros de quantidade de andares e capacidade do elevador.
	      para isso exibe as primeiras mensagens de interação.
<p><h6>-Entrar -</h6> Recebe os parâmetro das variáveis com a capacidade do elevador e a quantidade de pessoas atual.
	  dessa forma a mesma depois de executada atribui uma pessoa ao elevador caso o mesmo não esteja cheio.
	  por fim incrementa na variável quantidades de pessoas.
 
<p><h6>-Sair -</h6> Recebe os parâmetro da variável com a quantidade de pessoas atual.
	dessa forma a mesma depois de executada retira uma pessoa do elevador caso tenha alguma,
	caso não tenha o mesmo exibe uma mensagem dizendo que o elevador está vazio.

<p><h6>-Subir -</h6> Recebe os parâmetros da variável andar atual e quan");
            WriteLiteral(@"tidades de andares.
	quando executada, compara as variavéis para ver qual andar a pessoas se encontra 
	e se a mesma está no térreo ou no último andar, e também incrementa na variável andar atual.</p>

<p><h6>-Descer -</h6> Recebe os parâmetros da variável andar atual para que depois de executada 
	exiba qual o andar que o usuário se encontra, 
	depois decrementa na variável andar atual a cada execução.</p>
    <p ><h6 class =""text-center"">Funcionamento do Programa:</h6></p>
<p>- O Programa inicia dando boa vindas ao usuário, depois segues com perguntas inciais para captura de dados. 
pergunta qual será a capacidade do elevador e quantos andares terá o edifícil. 
em seguida o programa pergunta se o usuario deseja entrar no elevador ou não.</p>
<p>caso sim, o usuário segue e é apresentado a ele o menu com as opções subir, descer e sair.</p>
<p>caso não queira entrar, o programa exibe uma mensagem de agradecimento e finaliza.</p>

<p>se o usuário escolher subir, o programa mostra quantas pessoas t");
            WriteLiteral(@"em no elevador e segue com menu subir, descer e sair, mas, 
caso o usu´rio permaneça subindo e hegue até o ultimo andar, o programa o informa e so deve descer ou sair.</p>
<p>se o usuário escolher descer, logo de inicio nao será possivel pois o mesmo ja está no térreo e o programa irá lhe informar, 
mas, se o mesmo estiver nos andares a cima do térreo será sim possivel descer, e cada ver que o usuário se mover entre os andares 
o programa irá lhe iformar o andar atual.</p>
<p>se o usuário escolher sair, o programa exibira uma mensagem de agradecimento, 
uma mensagem de quantas pessoas existem no elevador e finalizará.
  </p>

     </a>
     </a>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
